-- Создаем таблицу студентов
CREATE TABLE STUDENTS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY,
    NUM_Z NUMBER NOT NULL,
    NAME VARCHAR2(20),
    LAST_NAME VARCHAR2(20)
);

-- Создаем табллицу преподавателей
CREATE TABLE PROFESSOR (
    ID NUMBER GENERATED ALWAYS AS IDENTITY,
    ITN NUMBER NOT NULL,
    NAME VARCHAR2(20),
    LAST_NAME VARCHAR2(20)
);

-- добавляем ограничения на не пустые
ALTER TABLE PROFESSOR MODIFY NAME NOT NULL;

ALTER TABLE PROFESSOR MODIFY LAST_NAME NOT NULL;

ALTER TABLE STUDENTS MODIFY NAME NOT NULL;

ALTER TABLE STUDENTS MODIFY LAST_NAME NOT NULL;

-- создаем таблицу с дисциплинами
CREATE TABLE DISCIPLINES (
    ID NUMBER GENERATED ALWAYS AS IDENTITY,
    NAME  VARCHAR2(30) NOT NULL
);

-- добавляю ограничения на primary key, поскольку я забыл сделать при создании таблицы
ALTER TABLE STUDENTS ADD CONSTRAINT PK_STUDENTS PRIMARY KEY (ID);

ALTER TABLE PROFESSOR ADD CONSTRAINT PK_PROFESSORS PRIMARY KEY (ID);

ALTER TABLE DISCIPLINES ADD CONSTRAINT PK_DISC PRIMARY KEY(ID);

-- Создаем промежуточную таблицу дисциплины-профессоры для отношения многие ко многим
CREATE TABLE DISCIPLINES_PROFESSORS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    DISCIPLINE_ID NUMBER NOT NULL,
    PROFESSOR_ID NUMBER NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (DISCIPLINE_ID) REFERENCES DISCIPLINES(ID),
    FOREIGN KEY (PROFESSOR_ID) REFERENCES PROFESSOR(ID)
);

-- создаем таблицу темы занятия, включая даату проведения занятия
CREATE TABLE TOPIC(
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY (ID),
    NAME VARCHAR2(50) NOT NULL,
    DATA TIMESTAMP(0)
);

-- создаем таблицу с посещениями
CREATE TABLE ATTENDANCE(
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    DISC_PROF_ID NUMBER NOT NULL,
    STUDENT_ID NUMBER NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (DISC_PROF_ID) REFERENCES DISCIPLINES_PROFESSORS(ID),
    FOREIGN KEY (STUDENT_ID) REFERENCES STUDENTS(ID)
);